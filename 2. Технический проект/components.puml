@startuml Диаграмма контекста
title "Компоненты медицинской системы записи"

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!$ICONURL = "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons"
!include $ICONURL/common.puml
!include $ICONURL/devicons/react.puml
!include $ICONURL/devicons/java.puml

Component(medicalService, "Медицинская система записи", "Java", $sprite="java")

System_Boundary(MedicalBoundary, "Medical Service") {

    Component(MedicalAPI, "MedicalControler", "Java", "API для обработки запросов на запись к врачу")
    Component(MedicalProcessor, "MedicalService", "Java", "Основная логика обработки записи на прием")
    Component(ScheduleRepository, "ScheduleRepository", "Java", "Получение актуального расписания врача из БД")
    Component(UserAccountsRepository, "UserAccountsRepository", "Java", "Получение информации о пользователях")
}

Component(MedicalDB, "DB", "MySQL", "Хранение актуальных данных")

Component(webApp, "Веб-приложение", "React", "Интерфейс для записи к врачу и просмотра медицинской карты, просмотра расписания врача")

webApp --> MedicalAPI : "Запросы на запись к врачу"
MedicalAPI --> MedicalProcessor : "Обработка запросов на запись к врачу"
MedicalProcessor --> ScheduleRepository : "Запрос актуального расписания"
MedicalProcessor --> UserAccountsRepository : "Проверка наличия записи на это время"
ScheduleRepository --> MedicalDB : "Запрос расписания врача"
UserAccountsRepository --> MedicalDB : "Запрос информации о записях пользователя"

Component(EventBus, "EventBus", "RabbitMQ", "Обработка и маршрутизация событий")

MedicalProcessor ---> EventBus : "Публикация события записи к врачу"




@enduml
