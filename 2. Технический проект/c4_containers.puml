@startuml Диаграмма контейнеров
title "C4. Контейнеры медицинской системы записи"

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml
!$ICONURL = "https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/v3.0.0/icons"
!include $ICONURL/common.puml
!include $ICONURL/devicons/react.puml
!include $ICONURL/devicons2/postgresql.puml

' Персоны
Person(patient, "Пациент", "Запись на прием к врачу, просмотр своей медицинской карты")
Person(doctor, "Врач", "Просмотр расписания за день, регистрация проведенных приемов")
Person(admin, "Администратор", "Управление учетными записями пользователей и настройка системы")

' Система
System_Boundary(appBoundary, "Медицинская система записи") {
    Container(currencyExchangeService, "Система медицинской записи", "Java", "Обработка запросов на запись к врачу с использованием микросервисной архитектуры")
    Container(webApp, "Веб-приложение", "React", "Интерфейс для записи к врачу и просмотра медицинской карты, просмотра расписания врача")
    Container(db, "База данных", "MySQL", "Хранение данных о пользователях, расписании врачей, записях на прием, медицинских картах")
    Container(exchangeRateService, "Сервис medods", "Java", "Интеграция с medods для получения результатов анализов пациентов")
    Container(monitoringService, "Сервис мониторинга", "Zabbix", "Мониторинг состояния системы")
    Container(testingService, "Сервис тестирования", "JUnit", "Автоматическое тестирование пользовательского интерфейса")
}

' Внешние системы
System_Ext(medodsAPI, "API medods", "Получение результатов анализов пациентов")
System_Ext(notificationServiceExt, "Сервис уведомлений", "Отправка уведомлений пользователям")

' Расположение элементов
patient ----> webApp : "Использует\n[HTTP/TCP]"
doctor ----> webApp : "Использует\n[HTTP/TCP]"
admin ----> webApp : "Использует\n[HTTP/TCP]"
webApp --> currencyExchangeService : "API вызовы\n[HTTPS/REST]"
currencyExchangeService --> db : "Чтение/запись\n[SQL]"
currencyExchangeService ---> notificationServiceExt : "Отправка уведомлений\n[HTTPS/REST]"
exchangeRateService ----> medodsAPI : "Запрос актуальных результатов анализов пациента\n[HTTPS/REST]"
exchangeRateService --> currencyExchangeService : "Отправка результатов анализов\n[HTTPS/REST]"
monitoringService --> currencyExchangeService : "Мониторинг состояния\n[TCP]"
testingService ---> webApp : "Тестирование интерфейса\n[HTTP/TCP]

@enduml